{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "edf0d512",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Original features and derived features:\n"
     ]
    }
   ],
   "source": [
    "import numpy as np\n",
    "import pandas as pd\n",
    "\n",
    "from sklearn import datasets\n",
    "\n",
    "# Load the diabetes dataset\n",
    "diabetes = datasets.load_diabetes(as_frame=True)\n",
    "\n",
    "# Create a DataFrame from the dataset\n",
    "df = diabetes.frame\n",
    "print(\"Original features and derived features:\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "d781ca6c",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Original features and derived features:\n",
      "        age       sex       bmi        bp        s1        s2        s3  \\\n",
      "0  0.038076  0.050680  0.061696  0.021872 -0.044223 -0.034821 -0.043401   \n",
      "1 -0.001882 -0.044642 -0.051474 -0.026328 -0.008449 -0.019163  0.074412   \n",
      "2  0.085299  0.050680  0.044451 -0.005670 -0.045599 -0.034194 -0.032356   \n",
      "3 -0.089063 -0.044642 -0.011595 -0.036656  0.012191  0.024991 -0.036038   \n",
      "4  0.005383 -0.044642 -0.036385  0.021872  0.003935  0.015596  0.008142   \n",
      "\n",
      "         s4        s5        s6  target  bmi_squared  bmi_s5_interaction  \\\n",
      "0 -0.002592  0.019907 -0.017646   151.0     0.003806            0.001228   \n",
      "1 -0.039493 -0.068332 -0.092204    75.0     0.002650            0.003517   \n",
      "2 -0.002592  0.002861 -0.025930   141.0     0.001976            0.000127   \n",
      "3  0.034309  0.022688 -0.009362   206.0     0.000134           -0.000263   \n",
      "4 -0.002592 -0.031988 -0.046641   135.0     0.001324            0.001164   \n",
      "\n",
      "   bp_s1_interaction  \n",
      "0          -0.000967  \n",
      "1           0.000222  \n",
      "2           0.000259  \n",
      "3          -0.000447  \n",
      "4           0.000086  \n"
     ]
    }
   ],
   "source": [
    "\n",
    "# --- Derived Features ---\n",
    "\n",
    "# 1. BMI Squared\n",
    "# Reasoning: The relationship between BMI and diabetes risk is often non-linear.\n",
    "# Squaring the BMI captures a potential accelerating effect, where risk increases\n",
    "# disproportionately at higher BMI values. This allows the model to better fit\n",
    "# the non-linear relationship observed in medical data.\n",
    "df['bmi_squared'] = df['bmi'] ** 2\n",
    "\n",
    "# 2. Interaction between BMI and S5 (log of serum triglycerides)\n",
    "# Reasoning: This feature captures the synergistic effect of obesity and high blood fat.\n",
    "# An individual with both a high BMI and high triglyceride levels is at a significantly\n",
    "# greater risk. The product of these two features serves as a powerful interaction term,\n",
    "# representing a more complex metabolic state than either feature alone.\n",
    "df['bmi_s5_interaction'] = df['bmi'] * df['s5']\n",
    "\n",
    "# 3. Interaction between BP (blood pressure) and S1 (total cholesterol)\n",
    "# Reasoning: Both high blood pressure and high cholesterol are key components of\n",
    "# metabolic syndrome, which is a strong precursor to type 2 diabetes. The co-occurrence\n",
    "# of these conditions is more predictive of risk than their individual effects.\n",
    "# This interaction term allows the model to give higher weight to individuals\n",
    "# who exhibit this dangerous combination of risk factors.\n",
    "df['bp_s1_interaction'] = df['bp'] * df['s1']\n",
    "\n",
    "# --- Display the new DataFrame with derived features ---\n",
    "print(df.head())"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": ".venv",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.13.1"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
